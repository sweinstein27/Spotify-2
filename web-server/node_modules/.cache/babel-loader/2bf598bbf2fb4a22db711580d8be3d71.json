{"ast":null,"code":"import _defineProperty from \"/home/learn/mockify-app-rails/frontend/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/learn/mockify-app-rails/frontend/client/src/index.js\";\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import Home from './components/Home';\n// import Search from \"./components/Search\";\n// import * as serviceWorker from './serviceWorker';\n// import { BrowserRouter as Router, Route, NavLink } from 'react-router-dom';\n// import SearchListContainer from './containers/HomeContainer'\n// /* Add basic styling for NavLinks */\n// const link = {\n//     width: '100px',\n//     padding: '12px',\n//     margin: '0 6px 6px',\n//     background: 'blue',\n//     textDecoration: 'none',\n//     color: 'white',\n//   }\n//   /* add the navbar component */\n//   const Navbar = () =>\n//     <div>\n//       <NavLink\n//         to=\"/\"\n//         /* set exact so it knows to only set activeStyle when route is deeply equal to link */\n//         exact\n//         /* add styling to Navlink */\n//         style={link}\n//         /* add prop for activeStyle */\n//         activeStyle={{\n//           background: 'darkblue'\n//         }}\n//       >Home</NavLink>\n//       <NavLink\n//         to=\"/search\"\n//         exact\n//         style={link}\n//         activeStyle={{\n//           background: 'darkblue'\n//         }}\n//       >Search</NavLink>\n//     </div>;\n// ReactDOM.render((\n//     <Router>\n//         <React.Fragment>\n//             <Navbar />\n//             <Route exact path=\"/\" component={Home} />\n//             <Route exact path=\"/search\" component={Search} />\n//         </React.Fragment>\n//     </Router>), \n//     document.getElementById('container')\n// );\n// import React from \"react\";\n// import { render } from \"react-dom\";\n// import { Provider } from \"react-redux\";\n// import store from \"./js/store/index\";\n// import App from \"./components/App.js\";\n// render(\n//   <Provider store={store}>\n//     <App />\n//   </Provider>,\n//   document.getElementById(\"app\")\n// );\nimport Root from \"./components/root\";\nimport ReactDOM from \"react-dom\";\nimport configureStore from \"./js/store/index\";\nimport React from \"react\";\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  var root = document.getElementById(\"root\");\n  var store;\n\n  if (window.currentUser) {\n    var preloadedState = {\n      entities: {\n        users: _defineProperty({}, window.currentUser.id, window.currentUser)\n      },\n      session: {\n        id: window.currentUser.id\n      }\n    };\n    store = configureStore(preloadedState);\n    delete window.currentUser;\n  } else {\n    store = configureStore();\n  }\n\n  window.store = store; // Testing\n\n  ReactDOM.render(React.createElement(Root, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), root);\n});","map":{"version":3,"sources":["/home/learn/mockify-app-rails/frontend/client/src/index.js"],"names":["Root","ReactDOM","configureStore","React","document","addEventListener","root","getElementById","store","window","currentUser","preloadedState","entities","users","id","session","render"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,IAAP,MAAiB,mBAAjB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEAC,QAAQ,CAACC,gBAAT,CAA0B,kBAA1B,EAA8C,YAAM;AAClD,MAAMC,IAAI,GAAGF,QAAQ,CAACG,cAAT,CAAwB,MAAxB,CAAb;AACA,MAAIC,KAAJ;;AAEA,MAAIC,MAAM,CAACC,WAAX,EAAwB;AACtB,QAAMC,cAAc,GAAG;AACrBC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,KAAK,sBAAKJ,MAAM,CAACC,WAAP,CAAmBI,EAAxB,EAA6BL,MAAM,CAACC,WAApC;AADG,OADW;AAIrBK,MAAAA,OAAO,EAAE;AAAED,QAAAA,EAAE,EAAEL,MAAM,CAACC,WAAP,CAAmBI;AAAzB;AAJY,KAAvB;AAMAN,IAAAA,KAAK,GAAGN,cAAc,CAACS,cAAD,CAAtB;AACA,WAAOF,MAAM,CAACC,WAAd;AACD,GATD,MASO;AACLF,IAAAA,KAAK,GAAGN,cAAc,EAAtB;AACD;;AAEDO,EAAAA,MAAM,CAACD,KAAP,GAAeA,KAAf,CAjBkD,CAkBlD;;AAEAP,EAAAA,QAAQ,CAACe,MAAT,CAAgB,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhB,EAAwCF,IAAxC;AACD,CArBD","sourcesContent":["// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import Home from './components/Home';\n// import Search from \"./components/Search\";\n// import * as serviceWorker from './serviceWorker';\n// import { BrowserRouter as Router, Route, NavLink } from 'react-router-dom';\n// import SearchListContainer from './containers/HomeContainer'\n\n// /* Add basic styling for NavLinks */\n// const link = {\n//     width: '100px',\n//     padding: '12px',\n//     margin: '0 6px 6px',\n//     background: 'blue',\n//     textDecoration: 'none',\n//     color: 'white',\n//   }\n   \n//   /* add the navbar component */\n//   const Navbar = () =>\n//     <div>\n//       <NavLink\n//         to=\"/\"\n//         /* set exact so it knows to only set activeStyle when route is deeply equal to link */\n//         exact\n//         /* add styling to Navlink */\n//         style={link}\n//         /* add prop for activeStyle */\n//         activeStyle={{\n//           background: 'darkblue'\n//         }}\n//       >Home</NavLink>\n//       <NavLink\n//         to=\"/search\"\n//         exact\n//         style={link}\n//         activeStyle={{\n//           background: 'darkblue'\n//         }}\n//       >Search</NavLink>\n//     </div>;\n\n\n// ReactDOM.render((\n//     <Router>\n//         <React.Fragment>\n//             <Navbar />\n//             <Route exact path=\"/\" component={Home} />\n//             <Route exact path=\"/search\" component={Search} />\n//         </React.Fragment>\n//     </Router>), \n//     document.getElementById('container')\n// );\n\n// import React from \"react\";\n// import { render } from \"react-dom\";\n// import { Provider } from \"react-redux\";\n// import store from \"./js/store/index\";\n// import App from \"./components/App.js\";\n\n// render(\n//   <Provider store={store}>\n//     <App />\n//   </Provider>,\n//   document.getElementById(\"app\")\n// );\n\nimport Root from \"./components/root\";\nimport ReactDOM from \"react-dom\";\nimport configureStore from \"./js/store/index\";\nimport React from \"react\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const root = document.getElementById(\"root\");\n  let store;\n\n  if (window.currentUser) {\n    const preloadedState = {\n      entities: {\n        users: { [window.currentUser.id]: window.currentUser }\n      },\n      session: { id: window.currentUser.id }\n    };\n    store = configureStore(preloadedState);\n    delete window.currentUser;\n  } else {\n    store = configureStore();\n  }\n\n  window.store = store;\n  // Testing\n\n  ReactDOM.render(<Root store={store} />, root);\n});"]},"metadata":{},"sourceType":"module"}